//
//   CSAcademy Problem - Maximum Exploitation
//   From: IEEEXtreme 15.0
//   Solved By: Dimitrios and Petros Papakonstantinou
//   Submission Score: 100/100 (340ms - 47MB)
//

function main() {
  // Read input for row, col, x, y
  let input = require('fs').readFileSync('/dev/stdin', 'utf8').split('\n');  // Replace '/dev/stdin' with 'input.txt' if you're using a file

  // First line: row and col
  let [row, col] = input[0].split(' ').map(Number);

  // Second line: x and y
  let [x, y] = input[1].split(' ').map(Number);

  // Initialize Row, Col, and sum arrays
  let Row = Array(row + 1).fill(0);
  let Col = Array(col + 1).fill(0);
  let sum = Array.from({ length: row + 1 }, () => Array(col + 1).fill(0));

  // Start reading the matrix and filling the sum array
  for (let r = 1; r <= row; r++) {
    let values = input[r + 1].split(' ').map(Number);  // Get each row of the matrix
    Row[r] = Math.max(Row[r], Row[r - 1]);

    for (let c = 1; c <= col; c++) {
      Col[c] = Math.max(Col[c], Col[c - 1]);

      // Map input value to sum array
      sum[r][c] = values[c - 1];

      // Update the cumulative sum
      sum[r][c] = sum[r][c] - sum[r - 1][c - 1] + sum[r][c - 1] + sum[r - 1][c];

      // Check for x × y subarray
      if (r >= x && c >= y) {
        let xySum = sum[r][c] - sum[r - x][c] - sum[r][c - y] + sum[r - x][c - y];
        Row[r] = Math.max(Row[r], xySum);
        Col[c] = Math.max(Col[c], xySum);
      }

      // Check for y × x subarray
      if (r >= y && c >= x) {
        let yxSum = sum[r][c] - sum[r - y][c] - sum[r][c - x] + sum[r - y][c - x];
        Row[r] = Math.max(Row[r], yxSum);
        Col[c] = Math.max(Col[c], yxSum);
      }
    }
  }

  // Calculate the final result
  let ans = 0;
  for (let r = 1; r <= row; r++) {
    for (let c = 1; c <= col; c++) {
      // Check for x × y subarray
      if (r >= x && c >= y) {
        let xySum = sum[r][c] - sum[r - x][c] - sum[r][c - y] + sum[r - x][c - y];
        ans = Math.max(ans, xySum + Math.max(Row[r - x], Col[c - y]));
      }

      // Check for y × x subarray
      if (r >= y && c >= x) {
        let yxSum = sum[r][c] - sum[r - y][c] - sum[r][c - x] + sum[r - y][c - x];
        ans = Math.max(ans, yxSum + Math.max(Row[r - y], Col[c - x]));
      }
    }
  }

  // Print the final answer
  console.log(ans);
}

// Run the main function
main();

