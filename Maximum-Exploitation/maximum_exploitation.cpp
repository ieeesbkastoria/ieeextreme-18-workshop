//
//   CSAcademy Problem - Maximum Exploitation
//   From: IEEEXtreme 15.0
//   Solved By: Dimitrios and Petros Papakonstantinou
//   Submission Score: 100/100 (239ms - 4376KB)
//

#include <iostream>
#include <vector>

using namespace std;

int main(void) {
  int row, col, x, y;

  cin >> row >> col >> x >> y;

  vector<int> Row(row + 1, 0), Col(col + 1, 0);
  vector<vector<int>> sum(row + 1, vector<int>(col + 1, 0));

  for (int r = 1; r <= row; ++r) {
    Row[r] = max(Row[r], Row[r - 1]);

    for (int c = 1; c <= col; ++c) {
      Col[c] = max(Col[c], Col[c - 1]);

      cin >> sum[r][c];

      sum[r][c] = sum[r][c] - sum[r - 1][c - 1] + sum[r][c - 1] + sum[r - 1][c];

      if (r >= x && c >= y) {
        int xySum =
            sum[r][c] - sum[r - x][c] - sum[r][c - y] + sum[r - x][c - y];
        Row[r] = max(Row[r], xySum);
        Col[c] = max(Col[c], xySum);
      }

      if (r >= y && c >= x) {
        int yxSum =
            sum[r][c] - sum[r - y][c] - sum[r][c - x] + sum[r - y][c - x];
        Row[r] = max(Row[r], yxSum);
        Col[c] = max(Col[c], yxSum);
      }
    }
  }

  int ans = 0;
  for (int r = 1; r <= row; ++r) {
    for (int c = 1; c <= col; ++c) {
      if (r >= x && c >= y) {
        int xySum =
            sum[r][c] - sum[r - x][c] - sum[r][c - y] + sum[r - x][c - y];
        ans = max(ans, xySum + max(Row[r - x], Col[c - y]));
      }

      if (r >= y && c >= x) {
        int yxSum =
            sum[r][c] - sum[r - y][c] - sum[r][c - x] + sum[r - y][c - x];
        ans = max(ans, yxSum + max(Row[r - y], Col[c - x]));
      }
    }
  }

  cout << ans << endl;

  return 0;
}
