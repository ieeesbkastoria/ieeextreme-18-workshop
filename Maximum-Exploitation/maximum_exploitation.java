//
//   CSAcademy Problem - Maximum Exploitation
//   From: IEEEXtreme 15.0
//   Solved By: Dimitrios and Petros Papakonstantinou
//   Submission Score: 100/100 (1456ms - 46.9MB)
//

import java.util.Scanner;

public class Main {
  public static void main(String[] args) {
    Scanner scanner = new Scanner(System.in);

    int row = scanner.nextInt();
    int col = scanner.nextInt();
    int x = scanner.nextInt();
    int y = scanner.nextInt();

    int[] Row = new int[row + 1];
    int[] Col = new int[col + 1];
    int[][] sum = new int[row + 1][col + 1];

    for (int r = 1; r <= row; ++r) {
      Row[r] = Math.max(Row[r], Row[r - 1]);

      for (int c = 1; c <= col; ++c) {
        Col[c] = Math.max(Col[c], Col[c - 1]);

        sum[r][c] = scanner.nextInt();

        sum[r][c] =
            sum[r][c] - sum[r - 1][c - 1] + sum[r][c - 1] + sum[r - 1][c];

        if (r >= x && c >= y) {
          int xySum =
              sum[r][c] - sum[r - x][c] - sum[r][c - y] + sum[r - x][c - y];
          Row[r] = Math.max(Row[r], xySum);
          Col[c] = Math.max(Col[c], xySum);
        }

        if (r >= y && c >= x) {
          int yxSum =
              sum[r][c] - sum[r - y][c] - sum[r][c - x] + sum[r - y][c - x];
          Row[r] = Math.max(Row[r], yxSum);
          Col[c] = Math.max(Col[c], yxSum);
        }
      }
    }

    int ans = 0;
    for (int r = 1; r <= row; ++r) {
      for (int c = 1; c <= col; ++c) {
        if (r >= x && c >= y) {
          int xySum =
              sum[r][c] - sum[r - x][c] - sum[r][c - y] + sum[r - x][c - y];
          ans = Math.max(ans, xySum + Math.max(Row[r - x], Col[c - y]));
        }

        if (r >= y && c >= x) {
          int yxSum =
              sum[r][c] - sum[r - y][c] - sum[r][c - x] + sum[r - y][c - x];
          ans = Math.max(ans, yxSum + Math.max(Row[r - y], Col[c - x]));
        }
      }
    }

    System.out.println(ans);

    scanner.close();
  }
}
